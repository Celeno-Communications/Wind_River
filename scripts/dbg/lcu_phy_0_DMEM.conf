#!/bin/sh

. $cl_install_dir/scripts/ce_mem.inc

#LCU_CH0_EN - disable channel 2
mem_write 0x4AE000 0x0
#LCU_CH0_EN - disable channel 3
mem_write 0x4AE004 0x0
#
#BUF_START_ADDR
mem_write 0x7CF014 0x60040000
#BUF_END_ADDR  - end of the buffer
mem_write 0x7CF018 0x60060000
#CAPTURE_MODE - 1 cyclic 0 end buffer
mem_write 0x7CF01C 0x0
#LCU_COMMON_VCI - label CH2 to 1 and CH3 to 2
mem_write 0x7CF000 0x2100

#LCU_COMMON_CH0_CONF  vci+ts+narrow/wide format
mem_write 0x7CF100 0x0
#LCU_COMMON_CH1_CONF  vci+ts+narrow/wide format
mem_write 0x7CF104 0x0
#LCU_COMMON_CH2_CONF  vci+ts+narrow/wide format
mem_write 0x7CF108 0x4
#LCU_COMMON_CH3_CONF  vci+ts+narrow/wide format
mem_write 0x7CF10C 0x6
#LCU_COMMON_CH4_CONF  vci+ts+narrow/wide format
mem_write 0x7CF110 0x0
#LCU_COMMON_CH5_CONF  vci+ts+narrow/wide format
mem_write 0x7CF114 0x0

#LCU_COMMON_REC_CMD  ARM
mem_write 0x7CF020 0x1
#LCU_COMMON_REC_CMD  START
mem_write 0x7CF020 0x2


### TRIGGER CONFIGURATION
# Note: EXTRA_SAMPLES and EXTRA_CYCLES both has to be different from 0 in order for this to work !!!
# if either one is 0 - the last sample will be the stop trigger
#EXTRA_SAMPLES - e.g. 0x80 means record additional 128 samples after stop trigger
#	mem_write 0x7CF024 0x0
#EXTRA_CYCLES - e.g. 0x80000 means record 512K cycles after stop trigger if no more than extra samples occure
#mem_write 0x7CF028 0x0
#CH0_TRIG_MODE - start trigger mode
#mem_write 0x7CF830 0x0
# Note: In Single channel narrow mode ch0 sample is in the upper sample -> bits 127-64
#TRIG_PATTERN - bits 95<-64 - txControlCs = 0x1E0
#mem_write 0x7CF858 0x0000F000
# TRIG_MASK - bits 95<-64 - txControlCs mask bits 79-71
#mem_write 0x7CF878 0x0000FF80

## LCU PHY0 Configuration
#if [ "$CL_HW_MODEL" == "CL_ASIC" ]; then
#LCU_CH0_STOP_EN - enable stop signalling
mem_write 0x4AE078 0x0
#LCU_CH1_STOP_EN - enable stop signalling
mem_write 0x4AE07C 0x0
#LCU_CH0_CONF - CH2: - DMEM
mem_write 0x4AE008 0x1
#LCU_CH1_CONF - CH3: LA, narrow(128)
mem_write 0x4AE00C 0x602
#LCU_CH0_CTPREV_EN - CH2: sending to common depends on the compare to previous situation
mem_write 0x4AE0C0 0x1
#LCU_CH01_CTPREV_MASK_REG0-7 - CH3: Enable all
mem_write 0x4AE0D0 0xFFFFFFFF
mem_write 0x4AE0D4 0xFFFFFFFF
mem_write 0x4AE0D8 0xFFFFFFFF
mem_write 0x4AE0DC 0xFFFFFFFF
mem_write 0x4AE0E0 0xFFFFFFFF
mem_write 0x4AE0E4 0xFFFFFFFF
mem_write 0x4AE0E8 0xFFFFFFFF
mem_write 0x4AE0EC 0xFFFFFFFF

##DMEM configuration:
#LCU_DMEM_START_ADDR: 'mod_table_he_qam16_bw20_xfd' size of 0x40
#mem_write 0x4AE148 0x0
#LCU_DMEM_SIZE:
#mem_write 0x4AE14C 0x1000

#LCU_CH0_STOP_EN - enables a trigger stop upon completion of the DMEM read by the FIC MASTER
mem_write 0x4AE078 0x2
#LCU_CH0_EN - enable channel 2
#mem_write 0x4AE000 0x1
#LCU_CH1_EN - disable channel 3
#mem_write 0x4AE004 0x0
#LCU_CH0_START - CH2 start
#mem_write 0x4AE020 0x1
#LCU_CH1_START - CH3 start
#mem_write 0x4AE024 0x0
#fi


#CH0_TRIG_EN - Ask LCU common to look for stop trigger
#mem_write 0x7CF838 0x1
