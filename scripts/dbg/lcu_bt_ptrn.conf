#!/bin/sh

. $cl_install_dir/scripts/ce_mem.inc

##################### LCU_COMMON #####################
### BUF_START_ADDR
mem_write 0x7CF014 0x60040000
### BUF_END_ADDR
mem_write 0x7CF018 0x60060000
### CAPTURE_MODE - 0-end buffer, 1-cyclic
mem_write 0x7CF01C 0x1

### LCU_COMMON_VCI
# virtaul channel index
# ch5_vci [21:20]
# ch4_vci [17:16]
# ch3_vci [13:12]
# ch2_vci [9:8]
# ch1_vci [5:4]
# ch0_vci [1:0]
mem_write 0x7CF000 0x00030000

#LCU_COMMON_CH4_CONF  vci+ts+narrow/wide format
mem_write 0x7CF110 0x6

### LCU_BT_CH_VALID
#  ch_valid [19:0] - bit per channel
mem_write 0x7CF944 0x0101
### LCU_BT_CTPREV_EN
#  ctprev_valid [19:0]  bit per channel (compare to prev)
mem_write 0x7CF948 0xFFFFF


##################### BT_CONTROLLER #####################
### CONT_MODEM_SUBCH_EN_REG
#  Modem_LCU_sub_channel_indexes_enable      [11:6]
#  Controller_LCU_sub_channel_indexes_enable [5:0]
mem_write 0x398800 0x0000003F

### CONT_SUBCH_INDEX_REG0
# Controller_LCU_sub_channel_indexes_59downto45     [29:24]
# Controller_LCU_sub_channel_indexes_44downto30     [21:16]
# Controller_LCU_sub_channel_indexes_29downto15     [13:8]
# Controller_LCU_sub_channel_indexes_14downto_0     [5:0]
## put sub ch 1 on the lowest 0..14 so it will be easier to mask it 
mem_write 0x398804 0x0D020001
### CONT_SUBCH_INDEX_REG1
# Controller_LCU_sub_channel_indexes_89downto75     [13:8]
# Controller_LCU_sub_channel_indexes_74downto_60    [5:0]
mem_write 0x398808 0x0000120E

### MOD_SUBCH_INDEX_REG0
# Modem_LCU_sub_channel_indexes_59downto45          [29:24]
# Modem_LCU_sub_channel_indexes_44downto30          [21:16]
# Modem_LCU_sub_channel_indexes_29downto15          [13:8]
# Modem_LCU_sub_channel_indexes_14downto_0          [5:0]
mem_write 0x39880C 0x00000000
### MOD_SUBCH_INDEX_REG1
# Modem_LCU_sub_channel_indexes_89downto75     [13:8]
# Modem_LCU_sub_channel_indexes_74downto_60    [5:0]
mem_write 0x398810 0x00000000

### CH_MASK_INDEX_REG
# Controller_LCU_sub_channel_indexes_to_be_masked       [3:0]
mem_write 0x398814 0x00000008
### CH_MASK0_REG
mem_write 0x398818 0x00000000
### CH_MASK1_REG
mem_write 0x39881C 0x00000000
### CH_MASK2_REG
mem_write 0x398820 0x03FF8000


##################### TRIGGER CONFIGURATION STOP ON BT_PATTERN #####################

### LCU_BT_START
#  start [0]
mem_write 0x7CF904 0x1



### LCU_BT_STOP_EN.BT_STOP_PTRN_EN= “1”
mem_write 0x7CF928 0x00000001
### LCU_BT_STOP_PTRN
## pta_case = 0x22 on bit shift 9
mem_write 0x7CF92c 0x00004400
mem_write 0x7CF930 0x00000000
mem_write 0x7CF934 0x00000000
### LCU_BT_STOP_MASK
mem_write 0x7CF938 0x0000fc00
mem_write 0x7CF93c 0x00000000
mem_write 0x7CF940 0x00000000

# Note: EXTRA_SAMPLES and EXTRA_CYCLES both has to be different from 0 in order for this to work !!!
# if either one is 0 - the last sample will be the stop trigger
#EXTRA_SAMPLES - e.g. 0x80 means record additional 128 samples after stop trigger
mem_write 0x7CF024 0xffffffff
#EXTRA_CYCLES - e.g. 0x80000 means record 512K cycles after stop trigger if no more than extra samples occure
mem_write 0x7CF028 0x01000000



### LCU_BT_EN - enable BT LCU
#  enable [0]
mem_write 0x7CF900 0x1

##################### LCU_COMMON #####################
### LCU_COMMON_REC_CMD
# stop recording  [2]
# start recording [1]
# arm             [0]
mem_write 0x7CF020 0x00000001 # arm
mem_write 0x7CF020 0x00000002 # start