set(EMC_USB_VENDOR_CELENO_UMAC_APP "bootloader" CACHE STRING "Bootloader")
set(EMC_USB_VENDOR_CELENO_UMAC_APP_ID "1" CACHE STRING "Bootloader ID")
set(EMC_USB_VENDOR_CELENO_UMAC_APP_VERSION "6" CACHE STRING "Bootloader Version")
set(EMC_USB_VENDOR_CELENO_UMAC_APP_BUILD_ID "1" CACHE STRING "Bootloader Build ID")

eme_add_prerequisites(
  emcpp_system_celeno_wifi
  emc_vendor_celeno
  emc_usb_vendor_celeno_cli
)

# user mode io for linux systems
if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
  eme_add_prerequisites(external_popt)
  include("emcpp_system_celeno_wifi/eme/std.cmake")

  if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
    # this is only linked, if a uio target is compiled
    eme_add_prerequisites(emc_arch_linux_uio)
  endif()

  option(EMC_USB_VENDOR_CLASS_CELENO_CLI "" TRUE)
  set(EMC_VENDOR_CELENO_USB_IF_COUNT 1 CACHE STRING "")
  set(EMC_USB_VENDOR_CELENO_CLI_TARGET_MEM "VIRTUAL" CACHE STRING "")
  set(EMC_USB_DEVICE_HAL_EMC_DRIVER_IO_REQUEST_POOL_SIZE "4" CACHE STRING "")
  set(EMC_USB_DEVICE_HAL_MAX_EP "4" CACHE STRING "")
  set(EMC_USB_DRIVER_DWC3_MAX_ENDPOINT_DRIVER "4" CACHE STRING "")
  option(EMC_HW_PORT_WRITE_HOOK "" TRUE)
  set(EMC_USB_DEVICE_REQUEST_CHECK "NONE" CACHE STRING "")
  include("emcpp_system_celeno_wifi/eme/usb_dev.cmake")

  option(PROJECT_BUILD_DEBUG "" TRUE)
  include("emcpp_system_celeno_wifi/eme/debug.cmake")
endif()

# Xt system
if (CMAKE_SYSTEM_NAME STREQUAL "Generic")
  #option(PROJECT_BUILD_OPTIM "" FALSE)
  option(PROJECT_BUILD_OPTIM "" TRUE)

  set(EMCPP_SYSTEM_CELENO_WIFI_CPU_START_CLK_MHZ "60" CACHE STRING "CPU clock at start")

  include(emcpp_system_celeno_wifi/eme/xtensa.cmake)

  set(EMC_STD_ATOMIC "PSEUDO" CACHE STRING "" FORCE)
  set(EMC_STD "EMULATE" CACHE STRING "")
  set(EMC_STD_MUTEX "extern" CACHE STRING "")
  set(EMC_STD_TIMESTAMP "EXTERN" CACHE STRING "")
  set(EMC_STD_STDIO "NONE" CACHE STRING "" FORCE)
  set(EMC_STD_MALLOC "tlsf" CACHE STRING "" FORCE)
  set(EMC_STD_DMA_MALLOC "tlsf" CACHE STRING "" FORCE)
  set(EMC_STD_MALLOC_HEAP_SIZE "(4*1024)" CACHE STRING "")
  set(EMC_HW_PHYSICAL_ADDRESS_MAP "EXTERN" CACHE STRING "" FORCE)


  option(EMC_USB_DEVICE_DRIVER_DWC3 "" TRUE)
  set(EMC_USB_DRIVER_DWC3_MAX_ENDPOINT_DRIVER "4" CACHE STRING "")
  set(EMC_USB_DEVICE_HAL_EMC_DRIVER_IO_REQUEST_POOL_SIZE "4" CACHE STRING "")
  set(EMC_USB_DEVICE_HAL_MAX_EP "4" CACHE STRING "")


  set(EMC_OS NONE CACHE STRING "")


  set(EMC_USB_MAX_SPEED "SUPER" CACHE STRING "")

  option(EMC_USB_DEVICE_PROCESS_HANDLING "" TRUE)
  set(EMC_USB_PORT_ARCH "NONE" CACHE STRING "")

  option(EMC_USB_DEVICE_HAL_EMC_DRIVER "" TRUE)

  option(EMC_USB_DEVICE_DRIVER_SPECIFIC "" TRUE)

  option(EMC_USB_DRIVER_FTABLE "" FALSE)
  option(EMC_USB_DRIVER_HIBERNATION_SUPPORTED "" FALSE)
  option(EMC_USB_DRIVER_EP_CONTINUOUS_CHANNEL_SUPPORTED "" FALSE)
  option(EMC_USB_DRIVER_EP_SHARED_BUFFER_SUPPORTED "" FALSE)
  option(EMC_USB_DRIVER_EP_POLLING_SUPPORTED "" FALSE)
  option(EMC_USB_DRIVER_EP_USES_ASIO_BUFFERS_ITERATION "" FALSE)
  option(EMC_USB_DEVICE_HAL_EMC_DRIVER_UPDATES_TX_FIFO_CONFIG "" FALSE)
  option(EMC_USB_DRIVER_DWC3_UPDATES_TX_FIFO_CONFIG "" ${EMC_USB_DEVICE_HAL_EMC_DRIVER_UPDATES_TX_FIFO_CONFIG})

  set(EMC_USB_DRIVER_ASIO_BUFFERS_PER_REQUEST "1" CACHE STRING "")

  option(EMC_USB_ROLE_DEVICE "" TRUE)

  option(EMC_HW_PORT_INLINE_MMIO "" TRUE)
  option(EMC_HW_PORT_WRITE_HOOK "" TRUE)
  option(EMC_MEMORY_POOL_TYPE_TLSF "" TRUE)
  option(EMC_MEMORY_POOL_TYPE_MALLOC "" TRUE)
  option(EMC_MEMORY_POOL_TYPE_UNCACHED "" OFF)

  set(EMC_USB_VENDOR_CELENO_CLI_TARGET_MEM "DIRECT" CACHE STRING "")

  option(EMCPP_TEST "" FALSE)

  option(PROJECT_BUILD_DEBUG "" TRUE)
  #option(PROJECT_BUILD_DEBUG "" FALSE)

  set(EMC_LOG_INTERNAL_APPENDER_MEMORY_INSTANCES "1" CACHE STRING "")
  set(EMC_LOG "INTERNAL" CACHE STRING "" FORCE)
  set(EMC_LOG_INTERNAL_MEMORY_SIZE  "26 * 1024" CACHE STRING "")

  option(EMC_LOG_INTERNAL_USES_PC "" TRUE)
  option(EMC_LOG_INTERNAL_USES_TIMESTAMP "" TRUE)

  set(EMC_STD_ASSERT_SRC_POS "PROGRAM_COUNT" CACHE STRING "")
  option(EMC_STD_ASSERT_MESSAGE "" OFF)
  option(EMC_STD_ASSERT_CONTEXT "" OFF)
  option(EMC_STD_ASSERT_FUNCTION "" OFF)

  if(PROJECT_BUILD_DEBUG)
    set(EMC_STD_ASSERT "EMULATE" CACHE STRING "" FORCE)
    set(EMC_STD_ASSERT_IMPL "MEM" CACHE STRING "" FORCE)
    set(EMC_LOG_LEVEL "TRACE" CACHE STRING "" FORCE)
    set(EMC_USB_VENDOR_CELENO_CLI_LOG_LEVEL "TRACE" CACHE STRING "" FORCE)
  else()
    set(EMC_STD_ASSERT "NONE" CACHE STRING "")
    set(EMC_LOG_LEVEL "OFF" CACHE STRING "" FORCE)
    set(EMC_USB_VENDOR_CELENO_CLI_LOG_LEVEL "INFO" CACHE STRING "" FORCE)
  endif()

  option(EMCPP_SYSTEM_CELENO_WIFI_POST_MORTEM_EXCEPTION  "" TRUE)
endif()
