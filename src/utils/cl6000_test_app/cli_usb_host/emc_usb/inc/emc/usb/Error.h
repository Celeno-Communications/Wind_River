/**
 * @file
 * Copyright (C) 2011-2013 emsys Embedded Systems GmbH
 */
#ifndef EMC_USB_Error_H
#define EMC_USB_Error_H

#include "emc/usb/configure.h"

// clang-format off extern C
#ifdef __cplusplus
extern "C" {
#endif
// clang-format on extern C

/** Possible USB error codes */
typedef enum EMC_USB_Error {
  EMC_USB_NO_ERROR                   = 0,

  EMC_USB_ERROR_MIN                  = 0x80,

  EMC_USB_ERR_DRIVER_NOT_INITIALIZED = EMC_USB_ERROR_MIN,
  EMC_USB_ERR_DRIVER_NOT_OPENED,
  EMC_USB_ERR_UNKNOWN_PARAMETER,
  EMC_USB_ERR_NON_VALID_ENDPOINT,

  EMC_USB_ERR_BUFFER_SIZE_ERROR,
  EMC_USB_ERR_BUFFER_DIR_MISMATCH,
  EMC_USB_ERR_NO_REQUEST_PENDING,
  EMC_USB_ERR_NO_DATA_STAGE_PENDING,

  EMC_USB_ERR_NO_STATUS_STAGE_PENDING,
  EMC_USB_ERR_NO_REMOTE_WAKEUP_ALLOWED,
  EMC_USB_ERR_DEVICE_NOT_SUSPENDED,
  EMC_USB_ERR_DEVICE_NOT_ACTIVE,

  EMC_USB_ERR_BUFFER_OVERLAPPING,
  EMC_USB_ERR_EP_STALLED,
  EMC_USB_ERR_EP0_STALLED,
  EMC_USB_ERR_INTERNAL_ERROR,

  EMC_USB_ERR_NO_FREE_EP_INFO,
  EMC_USB_ERR_REINITIALIZE_EP_INFO,
  EMC_USB_ERR_UNSPECIFIED_BEHAVIOR,
  EMC_USB_ERR_UNSUPPORTED_REQUEST,
  EMC_USB_ERR_UNSUPPORTED_DEVICE_FEATURE,
  EMC_USB_ERR_UNSUPPORTED_INTERFACE_FEATURE,
  EMC_USB_ERR_UNSUPPORTED_ENDPOINT_FEATURE,
  EMC_USB_ERR_REQUEST_INVALID_VALUE,
  EMC_USB_ERR_REQUEST_INVALID_LENGTH,
  EMC_USB_ERR_REQUEST_INVALID_INDEX,
  EMC_USB_ERR_UNKNOWN_INTERFACE,
  EMC_USB_ERR_UNKNOWN_ALTERNATE_SETTING,
  EMC_USB_ERR_UNKNOWN_ENDPOINT,
  EMC_USB_ERR_UNKNOWN_RECIPIENT,
  EMC_USB_ERR_INVALID_DESCRIPTOR,
  EMC_USB_ERR_INVALID_ADDRESS,
  EMC_USB_ERR_APPLICATION_ERROR,
  EMC_USB_ERR_NO_STALL_ON_EP0,
  EMC_USB_ERROR_MAX = EMC_USB_ERR_NO_STALL_ON_EP0
} EMC_USB_Error;

/** convert error to string */
const char* EMC_USB_Error_name(EMC_USB_Error error);

// clang-format off extern C
#ifdef __cplusplus
}
#endif
// clang-format on extern C

#endif
